[package]
name = "wasm"
version = "0.1.0"
authors = ["Ivan Schuetz <ivanhp978@gmail.com>"]
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib"]
path = "src/lib.rs"

[dependencies]
wasm-bindgen = { version = "0.2.78", features = ["serde-serialize"]  }

# algonaut = { git = "https://github.com/manuelmauro/algonaut", branch = "main", features = ["rustls"] }
algonaut = { path = "../../../algonaut" }

base = { path = "../../core" }
# base = { git = "ssh://git@github.com/ivanschuetz/capi-core.git", branch = "main" }
# base = { git = "https://github.com/ivanschuetz/capi-core", branch = "main" }

# my-algo = { git = "https://github.com/ivanschuetz/my-algo-rust-adapter", branch = "main" }
my-algo = { path = "../../../my-algo" }

anyhow = "1.0"
serde = {version = "1.0", features = ["derive"]}
serde_json = "1.0.64"
wasm-bindgen-futures = "0.4.24"
rust_decimal = "1.15"
wasm-logger = "0.2"
log = "0.4"
data-encoding = "2.3.2"
rmp-serde = "1.0.0"
chrono = { version = "0.4.19", features = ["serde", "wasmbind"] }
async-trait = "0.1.51"

[profile.release]
# less code to include into binary
panic = 'abort' 
# optimization over all codebase (better optimization, slower build)
codegen-units = 1
# optimization for size (more aggressive)
opt-level = 'z' 
# optimization for size 
# opt-level = 's' 
# link time optimization using using whole-program analysis
lto = true
